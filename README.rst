calmjs.rjs
==========

A `RequireJS`_ toolchain built on top of calmjs for a well managed
workflow for the compilation of RequireJS bundled code.

.. _RequireJS: http://requirejs.org/


Introduction
============

This package will provide a toolchain to working with RequireJS and make
use of the calmjs framework for specifying dependency on npm packages
and generally working with node and npm.  This will also provide a
framework to generate test harnesses for building testable JavaScript
code from within a Python module.


Features
--------

The core of the package is a toolchain that will load and compile all
registered JavaScript files within a python (virtual) environment and
bundle everything into a single file, as per the source package's
package requirements (i.e. its declared dependencies).  The resulting
bundle will be a JavaScript file generated by r.js which will comply
with the `Asynchronous Module Definition`_ (AMD) API.

Do note, in the initial implementation, the source file loosely follows
certain definitions that only mimic what ES6 intends to provide.  Even
with this, as a consequence of treating JavaScript within the Python
package as a source file for the compilation target which is the
deployable bundle, the input source files and exported paths generated
by calmjs are NOT meant for direct consumption of web clients such as
web browsers.  The produced bundle from this framework will be usable
through the AMD API.

.. _Asynchronous Module Definition: http://requirejs.org/docs/whyamd.html

Installation
------------

Currently under development, please install by cloning this repository
and run ``python setup.py develop`` within a working Python environment,
or follow the local framework or operating system's default method on
installation of development packages that have pulled this package in.


Contribute
----------

- Issue Tracker: https://github.com/calmjs/calmjs.rjs/issues
- Source Code: https://github.com/calmjs/calmjs.rjs


License
-------

The project is licensed under the GPLv2 or later.
